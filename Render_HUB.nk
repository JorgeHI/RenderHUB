set cut_paste_input [stack 0]
version 13.2 v2
push $cut_paste_input
Group {
 name Render_HUB
 onCreate "def jhi_checkRootParentKnobs(node, root):\n    rootMode = root.knob(\"jhi_RenderHUB_mode\")\n    if not rootMode:\n        rhTab = nuke.Tab_Knob(\"jhi_config\",\"Script Config JHI\")\n        root.addKnob(rhTab)\n        rhMode = nuke.Boolean_Knob(\"jhi_RenderHUB_mode\",\"Render HUB Mode\")\n        root.addKnob(rhMode)\n    else:\n        rhMode = rootMode\n    if not rhMode.hasExpression():\n        rhMode.setExpression(\"\{0\}.ModeBool\".format(node.name()))\n    \nnode = nuke.thisNode()\nroot = nuke.root()\nif node.knob(\"useRoot\").value():\n    jhi_checkRootParentKnobs(node, root)"
 knobChanged "renderHub = nuke.thisNode()\nnodeName = renderHub.name()\nknob = nuke.thisKnob()\n\nif knob.name() == \"Mode\":\n    knobValue = knob.value()\n    if knobValue == \"Auto-\$Gui\":\n       renderHub.knob(\"ModeBool\").setExpression(\"!\$gui\")\n    else:\n        if knobValue == \"Render\":\n            modeBool = True\n        else:\n            modeBool = False\n        renderHub.knob(\"ModeBool\").clearAnimated()\n        renderHub.knob(\"ModeBool\").setValue(modeBool)\nelif knob.name() == \"knobType\" or knob.name() == \"linkKnobAction\":\n    if renderHub\[\"knobType\"].value() in \[\"ScanlineRender\", \"Auto\"] and renderHub\[\"linkKnobAction\"].value() == \"Parent\":\n        renderHub.knob(\"parentScanlineProfile\").clearFlag(nuke.INVISIBLE)\n    else:\n        renderHub.knob(\"parentScanlineProfile\").setFlag(nuke.INVISIBLE)\nelif knob.name() == \"useRoot\":\n    nodeExp = \"parent.\{0\}.ModeBool\".format(nodeName)\n    rootExp = \"parent.jhi_RenderHUB_mode\"\n    useRoot = renderHub.knob(\"useRoot\").value()\n    if useRoot:\n        root = nuke.root()\n        if renderHub.knob(\"useRoot\").value():\n            jhi_checkRootParentKnobs(renderHub, root)\n    with nuke.thisNode().parent():\n        for n in nuke.allNodes():\n            jhiName = n.knob(\"jhi_name\")\n            if jhiName:\n                if jhiName.value() == \"Render_HUB\":\n                    continue\n\n            for knob in n.allKnobs():\n                if knob.hasExpression():\n                    rawExp = knob.toScript()\n                    if rawExp.startswith(\"\{\\\"\"):\n                        exp = rawExp.partition(\"\\\"\")\[2].rpartition(\"\\\"\")\[0]\n                    else:\n                        exp = rawExp.partition(\"\{\")\[2].rpartition(\"\}\")\[0]\n                    if useRoot and knob.toScript().find(nodeExp) >= 0:\n                        knob.setExpression(exp.replace(nodeExp, rootExp))\n                    elif knob.toScript().find(rootExp) >= 0:\n                        knob.setExpression(exp.replace(rootExp, nodeExp))"
 tile_color 0xffaa2dff
 label "Mode: \[value this.Mode]"
 note_font_size 30
 selected true
 xpos -229
 ypos -136
 hide_input true
 addUserKnob {20 Management}
 addUserKnob {26 text l "" +STARTLINE T "<font color=\"grey\" face=\"Comic Sans MS\" size=\"10\">Mode: </font>"}
 addUserKnob {4 Mode l "" t "The current settings to apply in the Nuke script.\n - Work: Low profile setting to work in the script.\n - Render: High profile setting to render the script.\n - Auto \$Gui: Use the \$Gui option to set Work setting if Nuke have interfece active and Render setting if the script is rendering in batch modo (Farm) automatically." -STARTLINE M {Work Render "Auto-\$Gui" "" "" "" "" "" "" "" ""}}
 addUserKnob {6 ModeBool -STARTLINE +INVISIBLE}
 addUserKnob {26 ""}
 addUserKnob {26 selectActions l "" +STARTLINE T "<font color=\"grey\" face=\"Comic Sans MS\" size=\"10\">Select actions</font>"}
 addUserKnob {4 selectAllType l "Select all" t "Type to select the nodes of the script." M {Kronos Transform ScanlineRender Switch VectorBlur2 "" "" "" "" "" "" "" "" "" "" "" "" "" ""}}
 addUserKnob {22 selectAllExec l Select t "Select all the nodes in the script of the selected type." -STARTLINE T "nodeType = nuke.thisNode().knob(\"selectAllType\").value()\nwith nuke.thisNode().parent():\n    for n in nuke.allNodes(nodeType):\n        n.setSelected(True)"}
 addUserKnob {4 selectParentType l "Select Parent" t "Type to select the parent nodes." M {All Kronos Transform ScanlineRender Switch VectorBlur2 "" "" "" ""}}
 addUserKnob {22 selectParentExec l Select t "Select the nodes parent to the Render HUB of the selected type." -STARTLINE T "nodeType = nuke.thisNode().knob(\"selectParentType\").value()\nwith nuke.thisNode().parent():\n    for n in nuke.allNodes():\n        if n.name() == \"Render_HUB\":\n            continue\n        if n.Class() != nodeType and nodeType != \"All\":\n            continue\n        nLink = False\n        for knob in n.allKnobs():\n            if knob.hasExpression():\n                if knob.toScript().find(\"Render_HUB\") >= 0:\n                    nLink = True\n            if nLink:\n                n.setSelected(True)\n                break"}
 addUserKnob {26 ""}
 addUserKnob {26 parentActions l "" +STARTLINE T "<font color=\"grey\" face=\"Comic Sans MS\" size=\"10\">Parent actions</font>"}
 addUserKnob {6 useRoot l "Hide Links (Root Parent)" t "Use The project settings (Root) of the script to centralise the Render Mode and Hide don't create expresion links between the nodes." +STARTLINE}
 addUserKnob {26 parentKnobText l "" +STARTLINE T "Link a Node"}
 addUserKnob {4 knobType l "" t "Knob or node configuration type to parent/unparent when executes this option." +STARTLINE M {Auto Disable Switch Filter ScanlineRender "Motion Blur" "" "" "" "" "" "" "" "" "" "" "" "" "" ""}}
 addUserKnob {4 linkKnobAction l "" t "Parent action to execute to the selected nodes." -STARTLINE M {Parent Unparent "" "" "" "" "" "" "" "" ""}}
 addUserKnob {4 parentScanlineProfile l "" t "Render profile of the HUB to parent the selected nodes." -STARTLINE M {Profile1 Profile2 "" "" "" "" "" "" "" "" ""}}
 addUserKnob {22 execParent l "Execute to Selected" t "Parent/Unparent the selected knob/configuration of the selected node to the Render HUB." -STARTLINE T "parentKnobsSR = \[\"conservative_shader_sampling\", \"transparency\", \"ztest_enabled\", \"filter\", \"antialiasing\",\n\"zblend_mode\", \"zblend_range\", \"projection_mode\", \"max_tessellation\", \"overscan\", \"ambient\", \n\"samples\", \"shutter\", \"shutteroffset\", \"shuttercustomoffset\", \"temporal_jitter\", \"spatial_jitter\", \n\"focal_jitter\", \"stochastic_samples\", \"motion_vectors_type\"]\nparentKnobsMB = \[\"motionblur\", \"shutter\", \"shutteroffset\", \"shuttercustomoffset\"]\n\ndef getExpresion(knobType, baseExp):\n    expression = \"!\{0\}\".format(baseExp)\n    knobName = \"disable\" if knobType == \"Disable\" else knobType\n    if knobName == \"Switch\":\n        knobName = \"which\"\n        expression = \"\{0\}? 0:1\".format(baseExp)\n    elif knobName == \"Filter\":\n        knobName = \"filter\"\n        expression = \"\{0\}? parent.\{nodeName\}.Render_HUB_ProfileTransform_Render.filter: parent.\{nodeName\}.Render_HUB_ProfileTransform_Work.filter\".replace(\"\{0\}\", baseExp)\n    elif knobName == \"Motion Blur\":\n        expression = \"\{0\}? parent.\{nodeName\}.Render_HUB_ProfileTransform_Render.\{knob\}: parent.\{nodeName\}.Render_HUB_ProfileTransform_Work.\{knob\}\".replace(\"\{0\}\", baseExp)\n    elif knobName == \"ScanlineRender\":\n        expression = \"\{0\}? parent.\{nodeName\}.Render_HUB_\{profile\}_Render.\{knob\} : parent.\{nodeName\}.Render_HUB_\{profile\}_Work.\{knob\}\".replace(\"\{0\}\", baseExp)\n    return knobName, expression\n    \ndef getNodeKnobTypes(node):\n    nodeType = node.Class()\n    nodeTypes = \[]\n    if nodeType == \"Switch\":\n        nodeTypes.append(\"Switch\")\n    elif nodeType in \[\"Transform\"]:\n        nodeTypes.append(\"Filter\")\n        nodeTypes.append(\"Motion Blur\")\n    elif nodeType == \"ScanlineRender\":\n        nodeTypes.append(\"ScanlineRender\")\n    else:\n        nodeTypes.append(\"Disable\")\n    return nodeTypes\n\nrenderHub = nuke.thisNode()\nif renderHub.knob(\"useRoot\").value():\n    baseExp = \"parent.jhi_RenderHUB_mode\"\nelse:\n    baseExp = \"parent.\{nodeName\}.ModeBool\"\n\naction = renderHub.knob(\"linkKnobAction\").value()\nprofileValue = renderHub.knob(\"parentScanlineProfile\").value()\nknobNameRaw = renderHub.knob(\"knobType\").value()\nknobName, expression = getExpresion(knobNameRaw, baseExp)\nwith nuke.thisNode().parent():\n    for node in nuke.selectedNodes():\n        if node.fullName() == renderHub.fullName():\n            continue\n        knobList = \[]\n        if knobNameRaw == \"Auto\":\n            for knobType in getNodeKnobTypes(node):\n                knobList.append(getExpresion(knobType, baseExp))\n        else:\n            knobList.append(\[knobName, expression])\n        \n        for knobData in knobList:\n            if knobData\[0] == \"ScanlineRender\":\n                nodeKnobs = node.knobs().keys()\n                for knob in nodeKnobs:\n                    if knob not in parentKnobsSR:\n                        continue\n                    if action == \"Parent\":\n                        node.knob(knob).setExpression(knobData\[1].format(nodeName=renderHub.name(), knob=knob, profile=profileValue))\n                    elif action == \"Unparent\":\n                        node.knob(knob).clearAnimated()\n            elif knobData\[0] == \"Motion Blur\":\n                nodeKnobs = node.knobs().keys()\n                for knob in nodeKnobs:\n                    if knob not in parentKnobsMB:\n                        continue\n                    if action == \"Parent\":\n                        node.knob(knob).setExpression(knobData\[1].format(nodeName=renderHub.name(), knob=knob))\n                    elif action == \"Unparent\":\n                        node.knob(knob).clearAnimated()\n            else:\n                knob = node.knob(knobData\[0])\n                if knob is None:\n                    continue\n                if action == \"Parent\":\n                    knob.setExpression(knobData\[1].replace(\"\{nodeName\}\", renderHub.name()))\n                elif action == \"Unparent\":\n                    knob.clearAnimated()\n"}
 addUserKnob {26 ""}
 addUserKnob {26 scriptCleaning_text l "" +STARTLINE T "<font color=\"grey\" face=\"Comic Sans MS\" size=\"10\">Script cleaning</font>"}
 addUserKnob {22 cleanScriptLinks l "Clean Script Links" T "renderHub = nuke.thisNode()\nnodeName = renderHub.name()\nuseRoot = renderHub.knob(\"useRoot\").value()\nif useRoot:\n    parentExp = \"jhi_RenderHUB_mode\"\nelse:\n    parentExp = nodeName\nif nuke.ask('You are going to set the current values in the mode \"\{0\}\" and clear all the link. This action can\\'t be undone. Do you want to continue?'.format(renderHub.knob(\"Mode\").value())):\n    with nuke.thisNode().parent():\n        for n in nuke.allNodes():\n            jhiName = n.knob(\"jhi_name\")\n            if jhiName:\n                if jhiName.value() == \"Render_HUB\":\n                    continue\n\n            for knob in n.allKnobs():\n                if knob.hasExpression():\n                    if knob.toScript().find(parentExp) >= 0:\n                        knobValue = knob.value()\n                        knob.clearAnimated()\n                        knob.setValue(knobValue)\n        root = nuke.root()\n        rootMode = root.knob(\"jhi_RenderHUB_mode\")\n        if rootMode:\n            root.removeKnob(rootMode)\n        rootTab = root.knob(\"jhi_config\")\n        if rootTab:\n            root.removeKnob(rootTab)\n    renderHub.knob(\"useRoot\").setValue(False)\n    \n                    " +STARTLINE}
 addUserKnob {20 General}
 addUserKnob {26 WorkingSettingsG l "Working Settings"}
 addUserKnob {41 filter_4 l filter T Render_HUB_ProfileTransform_Work.filter}
 addUserKnob {41 clamp -STARTLINE T Render_HUB_ProfileTransform_Work.clamp}
 addUserKnob {41 black_outside l "black outside" -STARTLINE T Render_HUB_ProfileTransform_Work.black_outside}
 addUserKnob {41 motionblur T Render_HUB_ProfileTransform_Work.motionblur}
 addUserKnob {41 shutter_4 l shutter T Render_HUB_ProfileTransform_Work.shutter}
 addUserKnob {41 shutteroffset_4 l "shutter offset" T Render_HUB_ProfileTransform_Work.shutteroffset}
 addUserKnob {41 shuttercustomoffset_2 l "" -STARTLINE T Render_HUB_ProfileTransform_Work.shuttercustomoffset}
 addUserKnob {26 RenderSettingsG l "Render Settings"}
 addUserKnob {41 filter_5 l filter T Render_HUB_ProfileTransform_Render.filter}
 addUserKnob {41 clamp_1 l clamp -STARTLINE T Render_HUB_ProfileTransform_Render.clamp}
 addUserKnob {41 black_outside_1 l "black outside" -STARTLINE T Render_HUB_ProfileTransform_Render.black_outside}
 addUserKnob {41 motionblur_1 l motionblur T Render_HUB_ProfileTransform_Render.motionblur}
 addUserKnob {41 shutter_5 l shutter T Render_HUB_ProfileTransform_Render.shutter}
 addUserKnob {41 shutteroffset_5 l "shutter offset" T Render_HUB_ProfileTransform_Render.shutteroffset}
 addUserKnob {41 shuttercustomoffset_3 l "" -STARTLINE T Render_HUB_ProfileTransform_Render.shuttercustomoffset}
 addUserKnob {20 Profile1}
 addUserKnob {26 WorkingSettings1 l "Working Settings"}
 addUserKnob {20 BasicSettings_w1 l BasicSettings n 1}
 addUserKnob {41 transparency T Render_HUB_Profile1_Work.transparency}
 addUserKnob {41 ztest_enabled l Z-buffer -STARTLINE T Render_HUB_Profile1_Work.ztest_enabled}
 addUserKnob {41 filter T Render_HUB_Profile1_Work.filter}
 addUserKnob {41 antialiasing T Render_HUB_Profile1_Work.antialiasing}
 addUserKnob {41 zblend_mode l "Z-blend mode" T Render_HUB_Profile1_Work.zblend_mode}
 addUserKnob {41 zblend_range l "Z-blend range" T Render_HUB_Profile1_Work.zblend_range}
 addUserKnob {41 projection_mode l "projection mode" T Render_HUB_Profile1_Work.projection_mode}
 addUserKnob {41 max_tessellation l "tessellation max" T Render_HUB_Profile1_Work.max_tessellation}
 addUserKnob {41 overscan T Render_HUB_Profile1_Work.overscan}
 addUserKnob {26 ""}
 addUserKnob {41 ambient T Render_HUB_Profile1_Work.ambient}
 addUserKnob {20 endGroup n -1}
 addUserKnob {20 MultiSample_w1 l MultiSample t "Props from MultiSample tap of Scanline Render" n 1}
 MultiSample_w1 0
 addUserKnob {41 samples T Render_HUB_Profile1_Work.samples}
 addUserKnob {41 shutter T Render_HUB_Profile1_Work.shutter}
 addUserKnob {41 shutteroffset l "shutter offset" T Render_HUB_Profile1_Work.shutteroffset}
 addUserKnob {41 temporal_jitter l "randomize time" T Render_HUB_Profile1_Work.temporal_jitter}
 addUserKnob {41 spatial_jitter l "sample diameter" T Render_HUB_Profile1_Work.spatial_jitter}
 addUserKnob {41 focal_jitter l "focus diameter" T Render_HUB_Profile1_Work.focal_jitter}
 addUserKnob {41 stochastic_samples l "stochastic samples" T Render_HUB_Profile1_Work.stochastic_samples}
 addUserKnob {20 endGroup_1 l endGroup n -1}
 addUserKnob {26 RenderSettings1 l "Render Settings"}
 addUserKnob {20 BasicSettings_r l BasicSettings n 1}
 BasicSettings_r 0
 addUserKnob {41 transparency_1 l transparency T Render_HUB_Profile1_Render.transparency}
 addUserKnob {41 ztest_enabled_1 l Z-buffer -STARTLINE T Render_HUB_Profile1_Render.ztest_enabled}
 addUserKnob {41 filter_1 l filter T Render_HUB_Profile1_Render.filter}
 addUserKnob {41 antialiasing_1 l antialiasing T Render_HUB_Profile1_Render.antialiasing}
 addUserKnob {41 zblend_mode_1 l "Z-blend mode" T Render_HUB_Profile1_Render.zblend_mode}
 addUserKnob {41 zblend_range_1 l "Z-blend range" T Render_HUB_Profile1_Render.zblend_range}
 addUserKnob {41 projection_mode_1 l "projection mode" T Render_HUB_Profile1_Render.projection_mode}
 addUserKnob {41 max_tessellation_1 l "tessellation max" T Render_HUB_Profile1_Render.max_tessellation}
 addUserKnob {41 overscan_1 l overscan T Render_HUB_Profile1_Render.overscan}
 addUserKnob {26 ""}
 addUserKnob {41 ambient_1 l ambient T Render_HUB_Profile1_Render.ambient}
 addUserKnob {20 endGroup_2 l endGroup n -1}
 addUserKnob {20 MultiSample_r l MultiSample n 1}
 MultiSample_r 0
 addUserKnob {41 samples_1 l samples T Render_HUB_Profile1_Render.samples}
 addUserKnob {41 shutter_1 l shutter T Render_HUB_Profile1_Render.shutter}
 addUserKnob {41 shutteroffset_1 l "shutter offset" T Render_HUB_Profile1_Render.shutteroffset}
 addUserKnob {41 temporal_jitter_1 l "randomize time" T Render_HUB_Profile1_Render.temporal_jitter}
 addUserKnob {41 spatial_jitter_1 l "sample diameter" T Render_HUB_Profile1_Render.spatial_jitter}
 addUserKnob {41 focal_jitter_1 l "focus diameter" T Render_HUB_Profile1_Render.focal_jitter}
 addUserKnob {41 stochastic_samples_1 l "stochastic samples" T Render_HUB_Profile1_Render.stochastic_samples}
 addUserKnob {20 endGroup_3 l endGroup n -1}
 addUserKnob {20 Profile2}
 addUserKnob {26 WorkingSettings2 l "Working Settings"}
 addUserKnob {20 BasicSettings_w2 l BasicSettings n 1}
 BasicSettings_w2 0
 addUserKnob {41 transparency_2 l transparency T Render_HUB_Profile2_Work.transparency}
 addUserKnob {41 ztest_enabled_2 l Z-buffer -STARTLINE T Render_HUB_Profile2_Work.ztest_enabled}
 addUserKnob {41 filter_2 l filter T Render_HUB_Profile2_Work.filter}
 addUserKnob {41 antialiasing_2 l antialiasing T Render_HUB_Profile2_Work.antialiasing}
 addUserKnob {41 zblend_mode_2 l "Z-blend mode" T Render_HUB_Profile2_Work.zblend_mode}
 addUserKnob {41 zblend_range_2 l "Z-blend range" T Render_HUB_Profile2_Work.zblend_range}
 addUserKnob {41 projection_mode_2 l "projection mode" T Render_HUB_Profile2_Work.projection_mode}
 addUserKnob {41 max_tessellation_2 l "tessellation max" T Render_HUB_Profile2_Work.max_tessellation}
 addUserKnob {41 overscan_2 l overscan T Render_HUB_Profile2_Work.overscan}
 addUserKnob {26 ""}
 addUserKnob {41 ambient_2 l ambient T Render_HUB_Profile2_Work.ambient}
 addUserKnob {1 string}
 addUserKnob {20 endGroup_4 l endGroup n -1}
 addUserKnob {20 MultiSample_w2 l MultiSample n 1}
 MultiSample_w2 0
 addUserKnob {41 samples_2 l samples T Render_HUB_Profile2_Work.samples}
 addUserKnob {41 shutter_2 l shutter T Render_HUB_Profile2_Work.shutter}
 addUserKnob {41 shutteroffset_2 l "shutter offset" T Render_HUB_Profile2_Work.shutteroffset}
 addUserKnob {41 shuttercustomoffset l "" -STARTLINE T Render_HUB_Profile2_Work.shuttercustomoffset}
 addUserKnob {41 temporal_jitter_2 l "randomize time" T Render_HUB_Profile2_Work.temporal_jitter}
 addUserKnob {41 spatial_jitter_2 l "sample diameter" T Render_HUB_Profile2_Work.spatial_jitter}
 addUserKnob {41 focal_jitter_2 l "focus diameter" T Render_HUB_Profile2_Work.focal_jitter}
 addUserKnob {41 stochastic_samples_2 l "stochastic samples" T Render_HUB_Profile2_Work.stochastic_samples}
 addUserKnob {41 uniform_distribution l "uniform distribution" -STARTLINE T Render_HUB_Profile2_Work.uniform_distribution}
 addUserKnob {20 endGroup_5 l endGroup n -1}
 addUserKnob {26 RenderSettings2 l "Render Settings"}
 addUserKnob {20 BasicSettings_r2 l BasicSettings n 1}
 BasicSettings_r2 0
 addUserKnob {41 transparency_3 l transparency T Render_HUB_Profile2_Render.transparency}
 addUserKnob {41 ztest_enabled_3 l Z-buffer -STARTLINE T Render_HUB_Profile2_Render.ztest_enabled}
 addUserKnob {41 filter_3 l filter T Render_HUB_Profile2_Render.filter}
 addUserKnob {41 antialiasing_3 l antialiasing T Render_HUB_Profile2_Render.antialiasing}
 addUserKnob {41 zblend_mode_3 l "Z-blend mode" T Render_HUB_Profile2_Render.zblend_mode}
 addUserKnob {41 zblend_range_3 l "Z-blend range" T Render_HUB_Profile2_Render.zblend_range}
 addUserKnob {41 projection_mode_3 l "projection mode" T Render_HUB_Profile2_Render.projection_mode}
 addUserKnob {41 max_tessellation_3 l "tessellation max" T Render_HUB_Profile2_Render.max_tessellation}
 addUserKnob {41 overscan_3 l overscan T Render_HUB_Profile2_Render.overscan}
 addUserKnob {26 ""}
 addUserKnob {41 ambient_3 l ambient T Render_HUB_Profile2_Render.ambient}
 addUserKnob {20 endGroup_6 l endGroup n -1}
 addUserKnob {20 MultiSample_r2 l MultiSample n 1}
 MultiSample_r2 0
 addUserKnob {41 samples_3 l samples T Render_HUB_Profile2_Render.samples}
 addUserKnob {41 shutter_3 l shutter T Render_HUB_Profile2_Render.shutter}
 addUserKnob {41 shutteroffset_3 l "shutter offset" T Render_HUB_Profile2_Render.shutteroffset}
 addUserKnob {41 shuttercustomoffset_1 l "" -STARTLINE T Render_HUB_Profile2_Render.shuttercustomoffset}
 addUserKnob {41 temporal_jitter_3 l "randomize time" T Render_HUB_Profile2_Render.temporal_jitter}
 addUserKnob {41 spatial_jitter_3 l "sample diameter" T Render_HUB_Profile2_Render.spatial_jitter}
 addUserKnob {41 focal_jitter_3 l "focus diameter" T Render_HUB_Profile2_Render.focal_jitter}
 addUserKnob {41 stochastic_samples_3 l "stochastic samples" T Render_HUB_Profile2_Render.stochastic_samples}
 addUserKnob {41 uniform_distribution_1 l "uniform distribution" -STARTLINE T Render_HUB_Profile2_Render.uniform_distribution}
 addUserKnob {20 endGroup_7 l endGroup n -1}
 addUserKnob {20 jhi_help l Help t "Information about the Node."}
 addUserKnob {26 jhi_info l "" +STARTLINE T "Render HUB v0.2.0 - Node develop by Jorge Hernandez (JorgeHI)"}
 addUserKnob {26 jhi_contact l "" +STARTLINE T "\n<font color=\"grey\">For asistance or bug report contact: info@jorgehi.com\n</font>"}
 addUserKnob {22 jhi_doc l Documentation T "nukescripts.start(\"https://jorgehi.com/index.php/render-hub/\")" +STARTLINE}
 addUserKnob {22 jhi_nukepedia l Nukepedia -STARTLINE T "nukescripts.start(\"https://www.nukepedia.com/gizmos/other/render_hub\")"}
 addUserKnob {20 jhi_config l config +INVISIBLE}
 addUserKnob {1 jhi_name}
 jhi_name Render_HUB
 addUserKnob {1 jhi_version}
 jhi_version 0.2.0
}
 Input {
  inputs 0
  name Input1
  xpos -240
  ypos 200
 }
 Output {
  name Output1
  xpos -240
  ypos 350
 }
 ScanlineRender {
  inputs 0
  zblend_mode smooth
  zblend_range 0.0245
  max_tessellation -2
  overscan 2.9
  name Render_HUB_Profile1_Work
  xpos -70
  ypos 200
 }
 ScanlineRender {
  inputs 0
  name Render_HUB_Profile2_Work
  xpos -70
  ypos 270
 }
 ScanlineRender {
  inputs 0
  name Render_HUB_Profile2_Render
  xpos 120
  ypos 270
 }
 ScanlineRender {
  inputs 0
  name Render_HUB_Profile1_Render
  xpos 120
  ypos 200
 }
 Transform {
  inputs 0
  name Render_HUB_ProfileTransform_Render
  xpos 120
  ypos 340
 }
 Transform {
  inputs 0
  name Render_HUB_ProfileTransform_Work
  selected true
  xpos -70
  ypos 340
 }
end_group
